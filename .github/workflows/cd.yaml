name: CD-Pipeline

on:
  workflow_dispatch:
    inputs:
      ci_run_id:
        description: 'Run Id of the CI pipeline used to find the artifacts'
        required: true

jobs:
  test:
    # if: false
    runs-on: ubuntu-latest
    environment: dockerenv 
    env:
      TF_HOME: IaC-terraform-artifact
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download the Terraform Artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: ${{ env.TF_HOME }}
          path: ${{ env.TF_HOME }}
          run-id: ${{ github.event.inputs.ci_run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}


      - name: Terraform Provision
        uses: ./.github/actions/terraform-deploy
        with:
          workspace: test
          tfvars: ./variables/test.tfvars
          tf_api_token: ${{ secrets.TERRAFORM_TOKEN }}
          tf_home: ${{ env.TF_HOME }}

      - name: Deploy to AppService
        uses: ./.github/actions/deploy-appservice
        with:
          app_name: test-app-shahbaz-devsecops
          resource_group: test-rg-shahbaz-devsecops
          docker_image: ${{ secrets.USERNAME }}/app:${{ github.event.inputs.ci_run_id }}
          arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://test-app-shahbaz-devsecops.azurewebsites.net'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
        continue-on-error: true
  
  prod:
    needs: [test]
    runs-on: ubuntu-latest
    environment: dockerenv 
    env:
      TF_HOME: IaC-terraform-artifact
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download the Terraform Artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: ${{ env.TF_HOME }}
          path: ${{ env.TF_HOME }}
          run-id: ${{ github.event.inputs.ci_run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}


      - name: Terraform Provision
        uses: ./.github/actions/terraform-deploy
        with:
          workspace: prod
          tfvars: ./variables/prod.tfvars
          tf_api_token: ${{ secrets.TERRAFORM_TOKEN }}
          tf_home: ${{ env.TF_HOME }}

      - name: Deploy to AppService
        uses: ./.github/actions/deploy-appservice
        with:
          app_name: prod-app-shahbaz-devsecops
          resource_group: prod-rg-shahbaz-devsecops
          docker_image: ${{ secrets.USERNAME }}/app:${{ github.event.inputs.ci_run_id }}
          arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://test-app-shahbaz-devsecops.azurewebsites.net'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
        continue-on-error: true