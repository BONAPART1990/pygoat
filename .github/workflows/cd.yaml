name: CD-Pipeline

on:
  workflow_dispatch:
    inputs:
      ci_run_id:
        description: 'Run Id of the CI pipeline used to find the artifacts'
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    environment: dockerenv 
    env:
      TF_HOME: IaC-terraform-artifact
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download the Terraform Artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: ${{ env.TF_HOME }}
          path: ${{ env.TF_HOME }}
          run-id: ${{ github.event.inputs.ci_run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v2.0.3
      #   with:
      #     cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN  }}

      # - name: Apply Terraform
      #   run: |
      #     cd ${{ env.TF_HOME }}
      #     export TF_WORKSPACE="test"
      #     terraform init
      #     terraform apply -var-file=./variables/prod.tfvars -auto-approve



      # - name: Terraform Provision
      #   uses: ./.github/actions/terraform-deploy
      #   with:
      #     workspace: test
      #     tfvars: ./variables/test.tfvars
      #     tf_api_token: ${{ secrets.TERRAFORM_TOKEN }}
      #     tf_home: ${{ env.TF_HOME }}

      - name: Deploy to AppService
        uses: ./.github/actions/deploy-appservice
        with:
          app_name: test-app-shahbaz-devsecops
          resource_group: test-rg-shahbaz-devsecops
          docker_image: ${{ vars.USERNAME }}/app:${{ github.event.inputs.ci_run_id }}
          arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}

      # - name: ZAP Scan
      #   uses: zaproxy/action-baseline@v0.14.0
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
      #     target: 'https://app-taras-devsecoppapp-test-westus.azurewebsites.net'
      #     rules_file_name: '.zap/rules.tsv'
      #     cmd_options: '-a'
  
  # prod:
  #   needs: [test]
  #   runs-on: ubuntu-latest
  #   environment: common # For access to ${{ secrets.TF_API_TOKEN }}
  #   env:
  #     TF_HOME: terraform
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Download the Terraform Artifact
  #       uses: actions/download-artifact@v4.3.0
  #       with:
  #         name: terraform
  #         path: ${{ env.TF_HOME }}
  #         run-id: ${{ github.event.inputs.ci_run_id }}
  #         github-token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Terraform Provision
  #       uses: ./.github/actions/terraform-provision
  #       with:
  #         workspace: pygoat-prod
  #         tfvars: ./variable_values/prod.tfvars
  #         tf_api_token: ${{ secrets.TF_API_TOKEN }}

  #     - name: Deploy to AppService
  #       uses: ./.github/actions/deploy-appservice
  #       with:
  #         app_name: app-taras-devsecoppapp-prod-eastus2
  #         resource_group: rg-taras-devsecoppapp-prod-eastus2
  #         docker_image: ${{ vars.DOCKER_USER }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.event.inputs.ci_run_id }}
  #         arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}