name: ci pipeline

on:
  push:
    branches:
      - master

jobs:
  docker-build-and-scan:
    # if: false
    runs-on: ubuntu-latest
    environment: dockerenv
    # env: 
    #       username: ${{ secrets.USERNAME }}
    #       password: ${{ secrets.PASSWORD }}
    steps:
      # - name: demo
      #   run: echo "hello world"
      - name: checkout-git
        uses: actions/checkout@v4
      - name: docker login
        uses: docker/login-action@v3.4.0
        with: 
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags:  ${{ secrets.USERNAME }}/app:latest

      - name: using docker scout to get venrabiklities
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ secrets.USERNAME }}/app:latest
          sarif-file: sarif.output.json
          summary: true

      - name: Upload SARIF result
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif.output.json
          
  
  # JOB2        
  sonar-scan:
    if : False
    runs-on: ubuntu-latest
    environment: sonarenv   # <-- this job uses sonarenv
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

        with:
          args: >
            -Dsonar.projectKey=BONAPART1990_pygoat
            -Dsonar.organization=bonapart1990

  # JOB3        
  trivy-scan:
    runs-on: ubuntu-latest
    env:
      TF_HOME: ${{ github.workspace }}/terraform-IAC
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
 
      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'config'
          scan-ref: "./terraform-IAC"
          hide-progress: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'
          # severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Upload Terraform Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: IaC-terraform-artifact
          path: ${{ env.TF_HOME }}
          if-no-files-found: error      
          retention-days: 90
          overwrite: false      
          include-hidden-files: false 
      
      
  trigger-cd:
    runs-on: ubuntu-latest
    needs: [docker-build-and-scan,trivy-scan]
    steps:
      - name: "Trigger CD pipeline"
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "cd.yaml",
              ref: "master",
              inputs: {
                ci_run_id: "${{ github.run_id }}"
              }
            })